/*
* generated by Xtext
*/

package v1.quiz.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class QuizGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class QuizGameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QuizGame");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cQuizGameKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cByKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAuthorAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAuthorIDTerminalRuleCall_3_0 = (RuleCall)cAuthorAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cElementsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cElementsQuizParserRuleCall_5_0 = (RuleCall)cElementsAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//QuizGame:
		//	"quizGame" name=ID "by" author=ID "{" elements+=Quiz+ "}";
		public ParserRule getRule() { return rule; }

		//"quizGame" name=ID "by" author=ID "{" elements+=Quiz+ "}"
		public Group getGroup() { return cGroup; }

		//"quizGame"
		public Keyword getQuizGameKeyword_0() { return cQuizGameKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"by"
		public Keyword getByKeyword_2() { return cByKeyword_2; }

		//author=ID
		public Assignment getAuthorAssignment_3() { return cAuthorAssignment_3; }

		//ID
		public RuleCall getAuthorIDTerminalRuleCall_3_0() { return cAuthorIDTerminalRuleCall_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//elements+=Quiz+
		public Assignment getElementsAssignment_5() { return cElementsAssignment_5; }

		//Quiz
		public RuleCall getElementsQuizParserRuleCall_5_0() { return cElementsQuizParserRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class QuizElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Quiz");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeTypeEnumRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Keyword cQuestionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cTextKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTextAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTextSTRINGTerminalRuleCall_6_0 = (RuleCall)cTextAssignment_6.eContents().get(0);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cScoreKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cColonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cScoreAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cScoreINTTerminalRuleCall_10_0 = (RuleCall)cScoreAssignment_10.eContents().get(0);
		private final Keyword cSemicolonKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cChoicesKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cLeftCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cElementsAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cElementsChoiceParserRuleCall_14_0 = (RuleCall)cElementsAssignment_14.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Group cGroup_16 = (Group)cGroup.eContents().get(16);
		private final Keyword cHintKeyword_16_0 = (Keyword)cGroup_16.eContents().get(0);
		private final Keyword cColonKeyword_16_1 = (Keyword)cGroup_16.eContents().get(1);
		private final Assignment cHintAssignment_16_2 = (Assignment)cGroup_16.eContents().get(2);
		private final RuleCall cHintSTRINGTerminalRuleCall_16_2_0 = (RuleCall)cHintAssignment_16_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_16_3 = (Keyword)cGroup_16.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_17 = (Keyword)cGroup.eContents().get(17);
		
		//Quiz:
		//	type=Type "question" name=ID "{" "text" ":" text=STRING ";" "score" ":" score=INT ";" "choices" "{" elements+=Choice+
		//	"}" ("hint" ":" hint=STRING ";")? "}";
		public ParserRule getRule() { return rule; }

		//type=Type "question" name=ID "{" "text" ":" text=STRING ";" "score" ":" score=INT ";" "choices" "{" elements+=Choice+
		//"}" ("hint" ":" hint=STRING ";")? "}"
		public Group getGroup() { return cGroup; }

		//type=Type
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//Type
		public RuleCall getTypeTypeEnumRuleCall_0_0() { return cTypeTypeEnumRuleCall_0_0; }

		//"question"
		public Keyword getQuestionKeyword_1() { return cQuestionKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//"text"
		public Keyword getTextKeyword_4() { return cTextKeyword_4; }

		//":"
		public Keyword getColonKeyword_5() { return cColonKeyword_5; }

		//text=STRING
		public Assignment getTextAssignment_6() { return cTextAssignment_6; }

		//STRING
		public RuleCall getTextSTRINGTerminalRuleCall_6_0() { return cTextSTRINGTerminalRuleCall_6_0; }

		//";"
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }

		//"score"
		public Keyword getScoreKeyword_8() { return cScoreKeyword_8; }

		//":"
		public Keyword getColonKeyword_9() { return cColonKeyword_9; }

		//score=INT
		public Assignment getScoreAssignment_10() { return cScoreAssignment_10; }

		//INT
		public RuleCall getScoreINTTerminalRuleCall_10_0() { return cScoreINTTerminalRuleCall_10_0; }

		//";"
		public Keyword getSemicolonKeyword_11() { return cSemicolonKeyword_11; }

		//"choices"
		public Keyword getChoicesKeyword_12() { return cChoicesKeyword_12; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_13() { return cLeftCurlyBracketKeyword_13; }

		//elements+=Choice+
		public Assignment getElementsAssignment_14() { return cElementsAssignment_14; }

		//Choice
		public RuleCall getElementsChoiceParserRuleCall_14_0() { return cElementsChoiceParserRuleCall_14_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_15() { return cRightCurlyBracketKeyword_15; }

		//("hint" ":" hint=STRING ";")?
		public Group getGroup_16() { return cGroup_16; }

		//"hint"
		public Keyword getHintKeyword_16_0() { return cHintKeyword_16_0; }

		//":"
		public Keyword getColonKeyword_16_1() { return cColonKeyword_16_1; }

		//hint=STRING
		public Assignment getHintAssignment_16_2() { return cHintAssignment_16_2; }

		//STRING
		public RuleCall getHintSTRINGTerminalRuleCall_16_2_0() { return cHintSTRINGTerminalRuleCall_16_2_0; }

		//";"
		public Keyword getSemicolonKeyword_16_3() { return cSemicolonKeyword_16_3; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_17() { return cRightCurlyBracketKeyword_17; }
	}

	public class ChoiceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Choice");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTextAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTextSTRINGTerminalRuleCall_0_0 = (RuleCall)cTextAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cCorrectAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCorrectBoolParserRuleCall_2_0 = (RuleCall)cCorrectAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Choice:
		//	text=STRING "->" correct=Bool ";";
		public ParserRule getRule() { return rule; }

		//text=STRING "->" correct=Bool ";"
		public Group getGroup() { return cGroup; }

		//text=STRING
		public Assignment getTextAssignment_0() { return cTextAssignment_0; }

		//STRING
		public RuleCall getTextSTRINGTerminalRuleCall_0_0() { return cTextSTRINGTerminalRuleCall_0_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_1() { return cHyphenMinusGreaterThanSignKeyword_1; }

		//correct=Bool
		public Assignment getCorrectAssignment_2() { return cCorrectAssignment_2; }

		//Bool
		public RuleCall getCorrectBoolParserRuleCall_2_0() { return cCorrectBoolParserRuleCall_2_0; }

		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}

	public class BoolElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Bool");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//Bool:
		//	"true" | "false";
		public ParserRule getRule() { return rule; }

		//"true" | "false"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"true"
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }

		//"false"
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	
	
	public class TypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "Type");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMultiChoiceEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMultiChoiceMultiChoiceKeyword_0_0 = (Keyword)cMultiChoiceEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSingleChoiceEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSingleChoiceSingleChoiceKeyword_1_0 = (Keyword)cSingleChoiceEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum Type:
		//	multiChoice | singleChoice;
		public EnumRule getRule() { return rule; }

		//multiChoice | singleChoice
		public Alternatives getAlternatives() { return cAlternatives; }

		//multiChoice
		public EnumLiteralDeclaration getMultiChoiceEnumLiteralDeclaration_0() { return cMultiChoiceEnumLiteralDeclaration_0; }

		//"multiChoice"
		public Keyword getMultiChoiceMultiChoiceKeyword_0_0() { return cMultiChoiceMultiChoiceKeyword_0_0; }

		//singleChoice
		public EnumLiteralDeclaration getSingleChoiceEnumLiteralDeclaration_1() { return cSingleChoiceEnumLiteralDeclaration_1; }

		//"singleChoice"
		public Keyword getSingleChoiceSingleChoiceKeyword_1_0() { return cSingleChoiceSingleChoiceKeyword_1_0; }
	}
	
	private QuizGameElements pQuizGame;
	private QuizElements pQuiz;
	private ChoiceElements pChoice;
	private TypeElements unknownRuleType;
	private BoolElements pBool;
	
	private final GrammarProvider grammarProvider;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public QuizGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammarProvider = grammarProvider;
		this.gaTerminals = gaTerminals;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//QuizGame:
	//	"quizGame" name=ID "by" author=ID "{" elements+=Quiz+ "}";
	public QuizGameElements getQuizGameAccess() {
		return (pQuizGame != null) ? pQuizGame : (pQuizGame = new QuizGameElements());
	}
	
	public ParserRule getQuizGameRule() {
		return getQuizGameAccess().getRule();
	}

	//Quiz:
	//	type=Type "question" name=ID "{" "text" ":" text=STRING ";" "score" ":" score=INT ";" "choices" "{" elements+=Choice+
	//	"}" ("hint" ":" hint=STRING ";")? "}";
	public QuizElements getQuizAccess() {
		return (pQuiz != null) ? pQuiz : (pQuiz = new QuizElements());
	}
	
	public ParserRule getQuizRule() {
		return getQuizAccess().getRule();
	}

	//Choice:
	//	text=STRING "->" correct=Bool ";";
	public ChoiceElements getChoiceAccess() {
		return (pChoice != null) ? pChoice : (pChoice = new ChoiceElements());
	}
	
	public ParserRule getChoiceRule() {
		return getChoiceAccess().getRule();
	}

	//enum Type:
	//	multiChoice | singleChoice;
	public TypeElements getTypeAccess() {
		return (unknownRuleType != null) ? unknownRuleType : (unknownRuleType = new TypeElements());
	}
	
	public EnumRule getTypeRule() {
		return getTypeAccess().getRule();
	}

	//Bool:
	//	"true" | "false";
	public BoolElements getBoolAccess() {
		return (pBool != null) ? pBool : (pBool = new BoolElements());
	}
	
	public ParserRule getBoolRule() {
		return getBoolAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
