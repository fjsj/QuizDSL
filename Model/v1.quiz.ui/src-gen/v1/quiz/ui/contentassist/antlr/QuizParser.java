/*
* generated by Xtext
*/
package v1.quiz.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import v1.quiz.services.QuizGrammarAccess;

public class QuizParser extends AbstractContentAssistParser {
	
	@Inject
	private QuizGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected v1.quiz.ui.contentassist.antlr.internal.InternalQuizParser createParser() {
		v1.quiz.ui.contentassist.antlr.internal.InternalQuizParser result = new v1.quiz.ui.contentassist.antlr.internal.InternalQuizParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getBoolAccess().getAlternatives(), "rule__Bool__Alternatives");
					put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
					put(grammarAccess.getQuizGameAccess().getGroup(), "rule__QuizGame__Group__0");
					put(grammarAccess.getQuizAccess().getGroup(), "rule__Quiz__Group__0");
					put(grammarAccess.getQuizAccess().getGroup_16(), "rule__Quiz__Group_16__0");
					put(grammarAccess.getChoiceAccess().getGroup(), "rule__Choice__Group__0");
					put(grammarAccess.getQuizGameAccess().getNameAssignment_1(), "rule__QuizGame__NameAssignment_1");
					put(grammarAccess.getQuizGameAccess().getAuthorAssignment_3(), "rule__QuizGame__AuthorAssignment_3");
					put(grammarAccess.getQuizGameAccess().getElementsAssignment_5(), "rule__QuizGame__ElementsAssignment_5");
					put(grammarAccess.getQuizAccess().getTypeAssignment_0(), "rule__Quiz__TypeAssignment_0");
					put(grammarAccess.getQuizAccess().getNameAssignment_2(), "rule__Quiz__NameAssignment_2");
					put(grammarAccess.getQuizAccess().getTextAssignment_6(), "rule__Quiz__TextAssignment_6");
					put(grammarAccess.getQuizAccess().getScoreAssignment_10(), "rule__Quiz__ScoreAssignment_10");
					put(grammarAccess.getQuizAccess().getElementsAssignment_14(), "rule__Quiz__ElementsAssignment_14");
					put(grammarAccess.getQuizAccess().getHintAssignment_16_2(), "rule__Quiz__HintAssignment_16_2");
					put(grammarAccess.getChoiceAccess().getTextAssignment_0(), "rule__Choice__TextAssignment_0");
					put(grammarAccess.getChoiceAccess().getCorrectAssignment_2(), "rule__Choice__CorrectAssignment_2");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			v1.quiz.ui.contentassist.antlr.internal.InternalQuizParser typedParser = (v1.quiz.ui.contentassist.antlr.internal.InternalQuizParser) parser;
			typedParser.entryRuleQuizGame();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public QuizGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(QuizGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
